version: '3.8'

services:
  traefik:
    image: traefik:v3.2
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.traefik.address=:8081"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
    networks:
      - app-network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik-certificates:/certificates"
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.localhost`)"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
      - "traefik.docker.network=app-network"
    networks:
      - app-network
    
  user-db:
    image: mcr.microsoft.com/mssql/server
    container_name: user-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1435:1433"
    volumes:
      - user_data:/var/opt/mssql
    networks:
      - app-network

  device-db:
    image: mcr.microsoft.com/mssql/server
    container_name: device-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1434:1433"
    volumes:
      - device_data:/var/opt/mssql
    networks:
      - app-network

  mc-db:
    image: mcr.microsoft.com/mssql/server
    container_name: mc-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1437:1433"
    volumes:
      - mc_data:/var/opt/mssql
    networks:
      - app-network

  device-ms:
    build:
      context: ./DeviceMS/DeviceMS/DeviceMS
      dockerfile: Dockerfile
    depends_on:
      - device-db
      - rabbitmq
    networks:
      - app-network
    environment:
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal
      - Database=device-db
      - TrustServerCertificate=True
      - Connection Timeout=30
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__User=admin
      - RabbitMQ__Password=admin
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.device-ms.rule=PathPrefix(`/api/Device`) || PathPrefix(`/api/PersonReference`)"
    - "traefik.http.services.device-ms.loadbalancer.server.port=80"
    - "traefik.docker.network=app-network"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 10s

  mc-ms:
    build:
      context: ./MCMS/MCMS
      dockerfile: Dockerfile
    depends_on:
      - mc-db
      - rabbitmq
    networks:
      - app-network
    environment:
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal
      - Database=mc-db
      - TrustServerCertificate=True
      - Connection Timeout=30
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__User=admin
      - RabbitMQ__Password=admin
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.mc-ms.rule=PathPrefix(`/api/DeviceConsumption`)"
    - "traefik.http.services.mc-ms.loadbalancer.server.port=80"
    - "traefik.docker.network=app-network"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 10s


  user-ms:
    build:
      context: ./UserMS/UserMS
      dockerfile: Dockerfile
    depends_on:
      - user-db
    networks:
      - app-network
    environment:
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal
      - Database=user-db
      - TrustServerCertificate=True
      - Connection Timeout=30
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__User=admin
      - RabbitMQ__Password=admin
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.user-ms.rule=PathPrefix(`/api/User`)"
    - "traefik.http.services.user-ms.loadbalancer.server.port=80" 
    - "traefik.docker.network=app-network"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 10s

  device-sim:
    build:
      context: ./DeviceSim/DeviceSim
      dockerfile: Dockerfile
    container_name: device-sim
    volumes:
      - ./sensor.csv:/app/sensor.csv
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=admin
    depends_on:
      - rabbitmq
    networks:
      - app-network

  frontend:
    image: kaan_frontend
    networks:
      - app-network
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.frontend.rule=Host(`localhost`)"
    - "traefik.http.services.frontend.loadbalancer.server.port=8080"
    - "traefik.docker.network=app-network"

networks:
  app-network:
    driver: bridge
    external: true

volumes:
  device_data:
  user_data:
  mc_data:
